   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"button.c"
  21              	.Ltext0:
  22              		.file 1 "../button.c"
 1952              		.align	2
 1955              	state:
 1956 0000 00000000 		.space	4
 1957              		.global	fila
 1958              		.align	2
 1961              	fila:
 1962 0004 00000000 		.space	4
 1963              		.global	columna
 1964              		.align	2
 1967              	columna:
 1968 0008 00000000 		.space	4
 1969              		.global	valor
 1970              		.data
 1971              		.align	2
 1974              	valor:
 1975 0000 01000000 		.word	1
 1976              		.bss
 1977              		.align	2
 1978              	int_count:
 1979 000c 00000000 		.space	4
 1980              		.align	2
 1981              	retardo:
 1982 0010 00000000 		.space	4
 1983              		.align	2
 1984              	soltado:
 1985 0014 00000000 		.space	4
 1986              		.align	2
 1987              	retardo_trd:
 1988 0018 00000000 		.space	4
 1989              		.align	2
 1990              	retardo_trp:
 1991 001c 00000000 		.space	4
 1992              		.align	2
 1993              	tiempo_inicio:
 1994 0020 00000000 		.space	4
 1995              		.align	2
 1996              	waitState:
 1997 0024 00000000 		.space	4
 1998              		.text
 1999              		.align	2
 2000              		.global	Eint4567_init
 2002              	Eint4567_init:
 2003              	.LFB0:
   1:../button.c   **** /*********************************************************************************************
   2:../button.c   **** * Fichero:	button.c
   3:../button.c   **** * Autor:
   4:../button.c   **** * Descrip:	Funciones de manejo de los pulsadores (EINT6-7)
   5:../button.c   **** * Version:
   6:../button.c   **** *********************************************************************************************/
   7:../button.c   **** 
   8:../button.c   **** /*--- ficheros de cabecera ---*/
   9:../button.c   **** #include "44blib.h"
  10:../button.c   **** #include "44b.h"
  11:../button.c   **** #include "def.h"
  12:../button.c   **** 
  13:../button.c   **** /*--- variables globales ---*/
  14:../button.c   **** /* int_count la utilizamos para sacar un número por el 8led.
  15:../button.c   ****   Cuando se pulsa un botón sumamos y con el otro restamos. ¡A veces hay rebotes! */
  16:../button.c   **** volatile int state = 0;
  17:../button.c   **** volatile int fila = 0;
  18:../button.c   **** volatile int columna = 0;
  19:../button.c   **** volatile int valor = 1;
  20:../button.c   **** 
  21:../button.c   **** static volatile int int_count = 0;
  22:../button.c   **** static volatile int retardo = 0;
  23:../button.c   **** static volatile int soltado = 0;
  24:../button.c   **** static volatile int retardo_trd = 0;
  25:../button.c   **** static volatile int retardo_trp = 0;
  26:../button.c   **** static volatile int tiempo_inicio = 0;
  27:../button.c   **** static volatile int waitState = 0;
  28:../button.c   **** //unsigned int mantener= -1;
  29:../button.c   **** //int temp = 0;
  30:../button.c   **** 
  31:../button.c   **** /*--- declaracion de funciones ---*/
  32:../button.c   **** void Eint4567_ISR(void) __attribute__((interrupt("IRQ")));
  33:../button.c   **** void Eint4567_init(void);
  34:../button.c   **** extern void D8Led_symbol(int value); // declaramos la función que escribe en el 8led
  35:../button.c   **** extern void leds_off();
  36:../button.c   **** extern void boton_pulsado(void);
  37:../button.c   **** extern int timer2_leer();
  38:../button.c   **** extern void push_debug(int ID_evento, int auxData);
  39:../button.c   **** void iniciarEspera(unsigned int trp, unsigned int trd);
  40:../button.c   **** int esperaFinalizada(void);
  41:../button.c   **** 
  42:../button.c   **** /*--- codigo de funciones ---*/
  43:../button.c   **** void Eint4567_init(void)
  44:../button.c   **** {
 2004              		.loc 1 44 0
 2005              		.cfi_startproc
 2006              		@ Function supports interworking.
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 1, uses_anonymous_args = 0
 2009 0000 0DC0A0E1 		mov	ip, sp
 2010              	.LCFI0:
 2011              		.cfi_def_cfa_register 12
 2012 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2013 0008 04B04CE2 		sub	fp, ip, #4
 2014              		.cfi_offset 14, -8
 2015              		.cfi_offset 13, -12
 2016              		.cfi_offset 11, -16
 2017              	.LCFI1:
 2018              		.cfi_def_cfa 11, 4
  45:../button.c   **** 	/* Configuracion del controlador de interrupciones. Estos registros están definidos en 44b.h */
  46:../button.c   **** 	rI_ISPC    = 0x3ffffff;	// Borra INTPND escribiendo 1s en I_ISPC
 2019              		.loc 1 46 0
 2020 000c 9C309FE5 		ldr	r3, .L2
 2021 0010 3F23E0E3 		mvn	r2, #-67108864
 2022 0014 002083E5 		str	r2, [r3, #0]
  47:../button.c   **** 	rEXTINTPND = 0xf;       // Borra EXTINTPND escribiendo 1s en el propio registro
 2023              		.loc 1 47 0
 2024 0018 94309FE5 		ldr	r3, .L2+4
 2025 001c 0F20A0E3 		mov	r2, #15
 2026 0020 002083E5 		str	r2, [r3, #0]
  48:../button.c   **** 	rINTMOD    = 0x0;		// Configura las linas como de tipo IRQ
 2027              		.loc 1 48 0
 2028 0024 8C309FE5 		ldr	r3, .L2+8
 2029 0028 0020A0E3 		mov	r2, #0
 2030 002c 002083E5 		str	r2, [r3, #0]
  49:../button.c   **** 	rINTCON    = 0x1;	    // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 2031              		.loc 1 49 0
 2032 0030 1E36A0E3 		mov	r3, #31457280
 2033 0034 0120A0E3 		mov	r2, #1
 2034 0038 002083E5 		str	r2, [r3, #0]
  50:../button.c   **** 	rINTMSK    = ~(BIT_GLOBAL | BIT_EINT4567 | BIT_TIMER0 | BIT_TIMER2); // Enmascara todas las lineas
 2035              		.loc 1 50 0
 2036 003c 78309FE5 		ldr	r3, .L2+12
 2037 0040 78209FE5 		ldr	r2, .L2+16
 2038 0044 002083E5 		str	r2, [r3, #0]
  51:../button.c   **** 
  52:../button.c   **** 	/* Establece la rutina de servicio para Eint4567 */
  53:../button.c   **** 	pISR_EINT4567 = (int)Eint4567_ISR;
 2039              		.loc 1 53 0
 2040 0048 74309FE5 		ldr	r3, .L2+20
 2041 004c 74209FE5 		ldr	r2, .L2+24
 2042 0050 002083E5 		str	r2, [r3, #0]
  54:../button.c   **** 
  55:../button.c   **** 	/* Configuracion del puerto G */
  56:../button.c   **** 	rPCONG  = 0xffff;        		// Establece la funcion de los pines (EINT0-7)
 2043              		.loc 1 56 0
 2044 0054 70309FE5 		ldr	r3, .L2+28
 2045 0058 70209FE5 		ldr	r2, .L2+32
 2046 005c 002083E5 		str	r2, [r3, #0]
  57:../button.c   **** 	rPUPG   = 0x0;                  // Habilita el "pull up" del puerto
 2047              		.loc 1 57 0
 2048 0060 6C309FE5 		ldr	r3, .L2+36
 2049 0064 0020A0E3 		mov	r2, #0
 2050 0068 002083E5 		str	r2, [r3, #0]
  58:../button.c   **** 	rEXTINT = rEXTINT | 0x22222222;   // Configura las lineas de int. como de flanco de bajada
 2051              		.loc 1 58 0
 2052 006c 64209FE5 		ldr	r2, .L2+40
 2053 0070 60309FE5 		ldr	r3, .L2+40
 2054 0074 001093E5 		ldr	r1, [r3, #0]
 2055 0078 5C309FE5 		ldr	r3, .L2+44
 2056 007c 033081E1 		orr	r3, r1, r3
 2057 0080 003082E5 		str	r3, [r2, #0]
  59:../button.c   **** 
  60:../button.c   **** 	/* Por precaucion, se vuelven a borrar los bits de INTPND y EXTINTPND */
  61:../button.c   **** 	rI_ISPC    |= (BIT_EINT4567);
 2058              		.loc 1 61 0
 2059 0084 24309FE5 		ldr	r3, .L2
 2060 0088 20209FE5 		ldr	r2, .L2
 2061 008c 002092E5 		ldr	r2, [r2, #0]
 2062 0090 022682E3 		orr	r2, r2, #2097152
 2063 0094 002083E5 		str	r2, [r3, #0]
  62:../button.c   **** 	rEXTINTPND = 0xf;
 2064              		.loc 1 62 0
 2065 0098 14309FE5 		ldr	r3, .L2+4
 2066 009c 0F20A0E3 		mov	r2, #15
 2067 00a0 002083E5 		str	r2, [r3, #0]
  63:../button.c   **** }
 2068              		.loc 1 63 0
 2069 00a4 0CD04BE2 		sub	sp, fp, #12
 2070 00a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2071 00ac 1EFF2FE1 		bx	lr
 2072              	.L3:
 2073              		.align	2
 2074              	.L2:
 2075 00b0 2400E001 		.word	31457316
 2076 00b4 5400D201 		.word	30539860
 2077 00b8 0800E001 		.word	31457288
 2078 00bc 0C00E001 		.word	31457292
 2079 00c0 FFD7DFFB 		.word	-69216257
 2080 00c4 74FF7F0C 		.word	209715060
 2081 00c8 00000000 		.word	Eint4567_ISR
 2082 00cc 4000D201 		.word	30539840
 2083 00d0 FFFF0000 		.word	65535
 2084 00d4 4800D201 		.word	30539848
 2085 00d8 5000D201 		.word	30539856
 2086 00dc 22222222 		.word	572662306
 2087              		.cfi_endproc
 2088              	.LFE0:
 2090              		.align	2
 2091              		.global	Eint4567_ISR
 2093              	Eint4567_ISR:
 2094              	.LFB1:
  64:../button.c   **** 
  65:../button.c   **** void Eint4567_ISR(void)
  66:../button.c   **** {
 2095              		.loc 1 66 0
 2096              		.cfi_startproc
 2097              		@ Interrupt Service Routine.
 2098              		@ args = 0, pretend = 0, frame = 8
 2099              		@ frame_needed = 1, uses_anonymous_args = 0
 2100 00e0 04C02DE5 		str	ip, [sp, #-4]!
 2101 00e4 0DC0A0E1 		mov	ip, sp
 2102              	.LCFI2:
 2103              		.cfi_def_cfa_register 12
 2104 00e8 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2105 00ec 04B04CE2 		sub	fp, ip, #4
 2106              		.cfi_offset 14, -8
 2107              		.cfi_offset 13, -12
 2108              		.cfi_offset 11, -16
 2109              		.cfi_offset 3, -20
 2110              		.cfi_offset 2, -24
 2111              		.cfi_offset 1, -28
 2112              		.cfi_offset 0, -32
 2113              	.LCFI3:
 2114              		.cfi_def_cfa 11, 4
 2115 00f0 08D04DE2 		sub	sp, sp, #8
  67:../button.c   **** 	rINTMSK ^= BIT_EINT4567;
 2116              		.loc 1 67 0
 2117 00f4 F0329FE5 		ldr	r3, .L24
 2118 00f8 EC229FE5 		ldr	r2, .L24
 2119 00fc 002092E5 		ldr	r2, [r2, #0]
 2120 0100 022622E2 		eor	r2, r2, #2097152
 2121 0104 002083E5 		str	r2, [r3, #0]
  68:../button.c   **** 	push_debug(0x12,0x0);
 2122              		.loc 1 68 0
 2123 0108 1200A0E3 		mov	r0, #18
 2124 010c 0010A0E3 		mov	r1, #0
 2125 0110 FEFFFFEB 		bl	push_debug
  69:../button.c   **** 	/* Identificar la interrupcion (hay dos pulsadores)*/
  70:../button.c   **** 	int which_int = rEXTINTPND;
 2126              		.loc 1 70 0
 2127 0114 D4329FE5 		ldr	r3, .L24+4
 2128 0118 003093E5 		ldr	r3, [r3, #0]
 2129 011c 20300BE5 		str	r3, [fp, #-32]
  71:../button.c   **** 	switch (which_int)
 2130              		.loc 1 71 0
 2131 0120 20301BE5 		ldr	r3, [fp, #-32]
 2132 0124 040053E3 		cmp	r3, #4
 2133 0128 0200000A 		beq	.L6
 2134 012c 080053E3 		cmp	r3, #8
 2135 0130 4E00000A 		beq	.L7
 2136 0134 950000EA 		b	.L23
 2137              	.L6:
  72:../button.c   **** 	{
  73:../button.c   **** 		case 4:
  74:../button.c   **** //			mantener = 0;
  75:../button.c   **** 			if (state == 0) {
 2138              		.loc 1 75 0
 2139 0138 B4329FE5 		ldr	r3, .L24+8
 2140 013c 003093E5 		ldr	r3, [r3, #0]
 2141 0140 000053E3 		cmp	r3, #0
 2142 0144 0700001A 		bne	.L8
  76:../button.c   **** 				state = 1;
 2143              		.loc 1 76 0
 2144 0148 A4329FE5 		ldr	r3, .L24+8
 2145 014c 0120A0E3 		mov	r2, #1
 2146 0150 002083E5 		str	r2, [r3, #0]
  77:../button.c   **** 				leds_off();
 2147              		.loc 1 77 0
 2148 0154 FEFFFFEB 		bl	leds_off
  78:../button.c   **** 				int_count = 0xf;
 2149              		.loc 1 78 0
 2150 0158 98329FE5 		ldr	r3, .L24+12
 2151 015c 0F20A0E3 		mov	r2, #15
 2152 0160 002083E5 		str	r2, [r3, #0]
 2153 0164 3D0000EA 		b	.L9
 2154              	.L8:
  79:../button.c   **** 			} else if (state == 1){
 2155              		.loc 1 79 0
 2156 0168 84329FE5 		ldr	r3, .L24+8
 2157 016c 003093E5 		ldr	r3, [r3, #0]
 2158 0170 010053E3 		cmp	r3, #1
 2159 0174 1000001A 		bne	.L10
  80:../button.c   **** 				fila++;
 2160              		.loc 1 80 0
 2161 0178 7C329FE5 		ldr	r3, .L24+16
 2162 017c 003093E5 		ldr	r3, [r3, #0]
 2163 0180 012083E2 		add	r2, r3, #1
 2164 0184 70329FE5 		ldr	r3, .L24+16
 2165 0188 002083E5 		str	r2, [r3, #0]
  81:../button.c   **** 				if (fila > 10) {
 2166              		.loc 1 81 0
 2167 018c 68329FE5 		ldr	r3, .L24+16
 2168 0190 003093E5 		ldr	r3, [r3, #0]
 2169 0194 0A0053E3 		cmp	r3, #10
 2170 0198 020000DA 		ble	.L11
  82:../button.c   **** 					fila = 1;
 2171              		.loc 1 82 0
 2172 019c 58329FE5 		ldr	r3, .L24+16
 2173 01a0 0120A0E3 		mov	r2, #1
 2174 01a4 002083E5 		str	r2, [r3, #0]
 2175              	.L11:
  83:../button.c   **** 				}
  84:../button.c   **** 				int_count = fila;
 2176              		.loc 1 84 0
 2177 01a8 4C329FE5 		ldr	r3, .L24+16
 2178 01ac 002093E5 		ldr	r2, [r3, #0]
 2179 01b0 40329FE5 		ldr	r3, .L24+12
 2180 01b4 002083E5 		str	r2, [r3, #0]
 2181 01b8 280000EA 		b	.L9
 2182              	.L10:
  85:../button.c   **** 			} else if (state == 2){
 2183              		.loc 1 85 0
 2184 01bc 30329FE5 		ldr	r3, .L24+8
 2185 01c0 003093E5 		ldr	r3, [r3, #0]
 2186 01c4 020053E3 		cmp	r3, #2
 2187 01c8 1000001A 		bne	.L12
  86:../button.c   **** 				columna++;
 2188              		.loc 1 86 0
 2189 01cc 2C329FE5 		ldr	r3, .L24+20
 2190 01d0 003093E5 		ldr	r3, [r3, #0]
 2191 01d4 012083E2 		add	r2, r3, #1
 2192 01d8 20329FE5 		ldr	r3, .L24+20
 2193 01dc 002083E5 		str	r2, [r3, #0]
  87:../button.c   **** 				if (columna > 9) {
 2194              		.loc 1 87 0
 2195 01e0 18329FE5 		ldr	r3, .L24+20
 2196 01e4 003093E5 		ldr	r3, [r3, #0]
 2197 01e8 090053E3 		cmp	r3, #9
 2198 01ec 020000DA 		ble	.L13
  88:../button.c   **** 					columna = 1;
 2199              		.loc 1 88 0
 2200 01f0 08329FE5 		ldr	r3, .L24+20
 2201 01f4 0120A0E3 		mov	r2, #1
 2202 01f8 002083E5 		str	r2, [r3, #0]
 2203              	.L13:
  89:../button.c   **** 				}
  90:../button.c   **** 				int_count = columna;
 2204              		.loc 1 90 0
 2205 01fc FC319FE5 		ldr	r3, .L24+20
 2206 0200 002093E5 		ldr	r2, [r3, #0]
 2207 0204 EC319FE5 		ldr	r3, .L24+12
 2208 0208 002083E5 		str	r2, [r3, #0]
 2209 020c 130000EA 		b	.L9
 2210              	.L12:
  91:../button.c   **** 			} else if (state == 3) {
 2211              		.loc 1 91 0
 2212 0210 DC319FE5 		ldr	r3, .L24+8
 2213 0214 003093E5 		ldr	r3, [r3, #0]
 2214 0218 030053E3 		cmp	r3, #3
 2215 021c 0F00001A 		bne	.L9
  92:../button.c   **** 				valor++;
 2216              		.loc 1 92 0
 2217 0220 DC319FE5 		ldr	r3, .L24+24
 2218 0224 003093E5 		ldr	r3, [r3, #0]
 2219 0228 012083E2 		add	r2, r3, #1
 2220 022c D0319FE5 		ldr	r3, .L24+24
 2221 0230 002083E5 		str	r2, [r3, #0]
  93:../button.c   **** 				if (valor > 9) {
 2222              		.loc 1 93 0
 2223 0234 C8319FE5 		ldr	r3, .L24+24
 2224 0238 003093E5 		ldr	r3, [r3, #0]
 2225 023c 090053E3 		cmp	r3, #9
 2226 0240 020000DA 		ble	.L14
  94:../button.c   **** 					valor = 0;
 2227              		.loc 1 94 0
 2228 0244 B8319FE5 		ldr	r3, .L24+24
 2229 0248 0020A0E3 		mov	r2, #0
 2230 024c 002083E5 		str	r2, [r3, #0]
 2231              	.L14:
  95:../button.c   **** 				}
  96:../button.c   **** 				int_count = valor;
 2232              		.loc 1 96 0
 2233 0250 AC319FE5 		ldr	r3, .L24+24
 2234 0254 002093E5 		ldr	r2, [r3, #0]
 2235 0258 98319FE5 		ldr	r3, .L24+12
 2236 025c 002083E5 		str	r2, [r3, #0]
 2237              	.L9:
  97:../button.c   **** 			}
  98:../button.c   **** 			iniciarEspera(100000, 100000);
 2238              		.loc 1 98 0
 2239 0260 A0019FE5 		ldr	r0, .L24+28
 2240 0264 9C119FE5 		ldr	r1, .L24+28
 2241 0268 FEFFFFEB 		bl	iniciarEspera
  99:../button.c   **** 			break;
 2242              		.loc 1 99 0
 2243 026c 4D0000EA 		b	.L15
 2244              	.L7:
 100:../button.c   **** 		case 8:
 101:../button.c   **** //			mantener = -1;
 102:../button.c   **** 			if (state == 0)
 2245              		.loc 1 102 0
 2246 0270 7C319FE5 		ldr	r3, .L24+8
 2247 0274 003093E5 		ldr	r3, [r3, #0]
 2248 0278 000053E3 		cmp	r3, #0
 2249 027c 0700001A 		bne	.L16
 103:../button.c   **** 			{
 104:../button.c   **** 				leds_off();
 2250              		.loc 1 104 0
 2251 0280 FEFFFFEB 		bl	leds_off
 105:../button.c   **** 				state = 1;
 2252              		.loc 1 105 0
 2253 0284 68319FE5 		ldr	r3, .L24+8
 2254 0288 0120A0E3 		mov	r2, #1
 2255 028c 002083E5 		str	r2, [r3, #0]
 106:../button.c   **** 				int_count = 0xf;
 2256              		.loc 1 106 0
 2257 0290 60319FE5 		ldr	r3, .L24+12
 2258 0294 0F20A0E3 		mov	r2, #15
 2259 0298 002083E5 		str	r2, [r3, #0]
 2260 029c 370000EA 		b	.L17
 2261              	.L16:
 107:../button.c   **** 			} else if (state == 1) {
 2262              		.loc 1 107 0
 2263 02a0 4C319FE5 		ldr	r3, .L24+8
 2264 02a4 003093E5 		ldr	r3, [r3, #0]
 2265 02a8 010053E3 		cmp	r3, #1
 2266 02ac 1500001A 		bne	.L18
 108:../button.c   **** 				if (fila == 10) {
 2267              		.loc 1 108 0
 2268 02b0 44319FE5 		ldr	r3, .L24+16
 2269 02b4 003093E5 		ldr	r3, [r3, #0]
 2270 02b8 0A0053E3 		cmp	r3, #10
 2271 02bc 0600001A 		bne	.L19
 109:../button.c   **** 					state = 5;
 2272              		.loc 1 109 0
 2273 02c0 2C319FE5 		ldr	r3, .L24+8
 2274 02c4 0520A0E3 		mov	r2, #5
 2275 02c8 002083E5 		str	r2, [r3, #0]
 110:../button.c   **** 					int_count = 0x10;
 2276              		.loc 1 110 0
 2277 02cc 24319FE5 		ldr	r3, .L24+12
 2278 02d0 1020A0E3 		mov	r2, #16
 2279 02d4 002083E5 		str	r2, [r3, #0]
 2280 02d8 280000EA 		b	.L17
 2281              	.L19:
 111:../button.c   **** 				}
 112:../button.c   **** 				else if(fila != 0) {
 2282              		.loc 1 112 0
 2283 02dc 18319FE5 		ldr	r3, .L24+16
 2284 02e0 003093E5 		ldr	r3, [r3, #0]
 2285 02e4 000053E3 		cmp	r3, #0
 2286 02e8 2400000A 		beq	.L17
 113:../button.c   **** 					state = 2;
 2287              		.loc 1 113 0
 2288 02ec 00319FE5 		ldr	r3, .L24+8
 2289 02f0 0220A0E3 		mov	r2, #2
 2290 02f4 002083E5 		str	r2, [r3, #0]
 114:../button.c   **** 					int_count = 0xc;
 2291              		.loc 1 114 0
 2292 02f8 F8309FE5 		ldr	r3, .L24+12
 2293 02fc 0C20A0E3 		mov	r2, #12
 2294 0300 002083E5 		str	r2, [r3, #0]
 2295 0304 1D0000EA 		b	.L17
 2296              	.L18:
 115:../button.c   **** 				}
 116:../button.c   **** 			} else if (state == 2) {
 2297              		.loc 1 116 0
 2298 0308 E4309FE5 		ldr	r3, .L24+8
 2299 030c 003093E5 		ldr	r3, [r3, #0]
 2300 0310 020053E3 		cmp	r3, #2
 2301 0314 0A00001A 		bne	.L20
 117:../button.c   **** 				if(columna != 0) {
 2302              		.loc 1 117 0
 2303 0318 E0309FE5 		ldr	r3, .L24+20
 2304 031c 003093E5 		ldr	r3, [r3, #0]
 2305 0320 000053E3 		cmp	r3, #0
 2306 0324 1500000A 		beq	.L17
 118:../button.c   **** 					state = 3;
 2307              		.loc 1 118 0
 2308 0328 C4309FE5 		ldr	r3, .L24+8
 2309 032c 0320A0E3 		mov	r2, #3
 2310 0330 002083E5 		str	r2, [r3, #0]
 119:../button.c   **** 					int_count = 0x1;
 2311              		.loc 1 119 0
 2312 0334 BC309FE5 		ldr	r3, .L24+12
 2313 0338 0120A0E3 		mov	r2, #1
 2314 033c 002083E5 		str	r2, [r3, #0]
 2315 0340 0E0000EA 		b	.L17
 2316              	.L20:
 120:../button.c   **** 				}
 121:../button.c   **** 			} else if (state == 3 || state == 4) {
 2317              		.loc 1 121 0
 2318 0344 A8309FE5 		ldr	r3, .L24+8
 2319 0348 003093E5 		ldr	r3, [r3, #0]
 2320 034c 030053E3 		cmp	r3, #3
 2321 0350 0300000A 		beq	.L21
 2322              		.loc 1 121 0 is_stmt 0 discriminator 1
 2323 0354 98309FE5 		ldr	r3, .L24+8
 2324 0358 003093E5 		ldr	r3, [r3, #0]
 2325 035c 040053E3 		cmp	r3, #4
 2326 0360 0300001A 		bne	.L22
 2327              	.L21:
 122:../button.c   **** 				state = 4;
 2328              		.loc 1 122 0 is_stmt 1
 2329 0364 88309FE5 		ldr	r3, .L24+8
 2330 0368 0420A0E3 		mov	r2, #4
 2331 036c 002083E5 		str	r2, [r3, #0]
 2332 0370 020000EA 		b	.L17
 2333              	.L22:
 123:../button.c   **** 			}
 124:../button.c   **** 			else {
 125:../button.c   **** 				state = 5;
 2334              		.loc 1 125 0
 2335 0374 78309FE5 		ldr	r3, .L24+8
 2336 0378 0520A0E3 		mov	r2, #5
 2337 037c 002083E5 		str	r2, [r3, #0]
 2338              	.L17:
 126:../button.c   **** 			}
 127:../button.c   **** 
 128:../button.c   **** 
 129:../button.c   **** 
 130:../button.c   **** 			iniciarEspera(100000, 100000);
 2339              		.loc 1 130 0
 2340 0380 80009FE5 		ldr	r0, .L24+28
 2341 0384 7C109FE5 		ldr	r1, .L24+28
 2342 0388 FEFFFFEB 		bl	iniciarEspera
 131:../button.c   **** 			break;
 2343              		.loc 1 131 0
 2344 038c 050000EA 		b	.L15
 2345              	.L23:
 132:../button.c   **** 		default:
 133:../button.c   **** 			rINTMSK ^= BIT_EINT4567;
 2346              		.loc 1 133 0
 2347 0390 54309FE5 		ldr	r3, .L24
 2348 0394 50209FE5 		ldr	r2, .L24
 2349 0398 002092E5 		ldr	r2, [r2, #0]
 2350 039c 022622E2 		eor	r2, r2, #2097152
 2351 03a0 002083E5 		str	r2, [r3, #0]
 134:../button.c   **** 			break;
 2352              		.loc 1 134 0
 2353 03a4 0000A0E1 		mov	r0, r0	@ nop
 2354              	.L15:
 135:../button.c   **** 	}
 136:../button.c   **** 
 137:../button.c   **** 
 138:../button.c   **** 	D8Led_symbol(int_count & 0x000f); // sacamos el valor por pantalla (módulo 16)
 2355              		.loc 1 138 0
 2356 03a8 48309FE5 		ldr	r3, .L24+12
 2357 03ac 003093E5 		ldr	r3, [r3, #0]
 2358 03b0 0F3003E2 		and	r3, r3, #15
 2359 03b4 0300A0E1 		mov	r0, r3
 2360 03b8 FEFFFFEB 		bl	D8Led_symbol
 139:../button.c   **** 	/* Finalizar ISR */
 140:../button.c   **** 	rEXTINTPND = 0xf;				// borra los bits en EXTINTPND
 2361              		.loc 1 140 0
 2362 03bc 2C309FE5 		ldr	r3, .L24+4
 2363 03c0 0F20A0E3 		mov	r2, #15
 2364 03c4 002083E5 		str	r2, [r3, #0]
 141:../button.c   **** 	rI_ISPC   |= BIT_EINT4567;		// borra el bit pendiente en INTPND
 2365              		.loc 1 141 0
 2366 03c8 3C309FE5 		ldr	r3, .L24+32
 2367 03cc 38209FE5 		ldr	r2, .L24+32
 2368 03d0 002092E5 		ldr	r2, [r2, #0]
 2369 03d4 022682E3 		orr	r2, r2, #2097152
 2370 03d8 002083E5 		str	r2, [r3, #0]
 142:../button.c   **** 
 143:../button.c   **** }
 2371              		.loc 1 143 0
 2372 03dc 1CD04BE2 		sub	sp, fp, #28
 2373 03e0 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2374 03e4 04C09DE4 		ldmfd	sp!, {ip}
 2375 03e8 04F05EE2 		subs	pc, lr, #4
 2376              	.L25:
 2377              		.align	2
 2378              	.L24:
 2379 03ec 0C00E001 		.word	31457292
 2380 03f0 5400D201 		.word	30539860
 2381 03f4 00000000 		.word	state
 2382 03f8 0C000000 		.word	int_count
 2383 03fc 00000000 		.word	fila
 2384 0400 00000000 		.word	columna
 2385 0404 00000000 		.word	valor
 2386 0408 A0860100 		.word	100000
 2387 040c 2400E001 		.word	31457316
 2388              		.cfi_endproc
 2389              	.LFE1:
 2391              		.align	2
 2392              		.global	esperaFinalizada
 2394              	esperaFinalizada:
 2395              	.LFB2:
 144:../button.c   **** 
 145:../button.c   **** int esperaFinalizada(void)
 146:../button.c   **** {
 2396              		.loc 1 146 0
 2397              		.cfi_startproc
 2398              		@ Function supports interworking.
 2399              		@ args = 0, pretend = 0, frame = 8
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401 0410 0DC0A0E1 		mov	ip, sp
 2402              	.LCFI4:
 2403              		.cfi_def_cfa_register 12
 2404 0414 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2405 0418 04B04CE2 		sub	fp, ip, #4
 2406              		.cfi_offset 14, -8
 2407              		.cfi_offset 13, -12
 2408              		.cfi_offset 11, -16
 2409              	.LCFI5:
 2410              		.cfi_def_cfa 11, 4
 2411 041c 08D04DE2 		sub	sp, sp, #8
 147:../button.c   **** 	int tiempo_pasado = 0;
 2412              		.loc 1 147 0
 2413 0420 0030A0E3 		mov	r3, #0
 2414 0424 10300BE5 		str	r3, [fp, #-16]
 148:../button.c   **** 	tiempo_pasado = (timer2_leer() - tiempo_inicio);
 2415              		.loc 1 148 0
 2416 0428 FEFFFFEB 		bl	timer2_leer
 2417 042c 0020A0E1 		mov	r2, r0
 2418 0430 A8329FE5 		ldr	r3, .L40
 2419 0434 003093E5 		ldr	r3, [r3, #0]
 2420 0438 023063E0 		rsb	r3, r3, r2
 2421 043c 10300BE5 		str	r3, [fp, #-16]
 149:../button.c   **** 	if(retardo <= tiempo_pasado) {
 2422              		.loc 1 149 0
 2423 0440 9C329FE5 		ldr	r3, .L40+4
 2424 0444 002093E5 		ldr	r2, [r3, #0]
 2425 0448 10301BE5 		ldr	r3, [fp, #-16]
 2426 044c 030052E1 		cmp	r2, r3
 2427 0450 9D0000CA 		bgt	.L27
 150:../button.c   **** 		if(soltado) {
 2428              		.loc 1 150 0
 2429 0454 8C329FE5 		ldr	r3, .L40+8
 2430 0458 003093E5 		ldr	r3, [r3, #0]
 2431 045c 000053E3 		cmp	r3, #0
 2432 0460 1100000A 		beq	.L28
 151:../button.c   **** 			retardo = 0;
 2433              		.loc 1 151 0
 2434 0464 78329FE5 		ldr	r3, .L40+4
 2435 0468 0020A0E3 		mov	r2, #0
 2436 046c 002083E5 		str	r2, [r3, #0]
 152:../button.c   **** 
 153:../button.c   **** 			rEXTINTPND = 0xf;				// borra los bits en EXTINTPND
 2437              		.loc 1 153 0
 2438 0470 74329FE5 		ldr	r3, .L40+12
 2439 0474 0F20A0E3 		mov	r2, #15
 2440 0478 002083E5 		str	r2, [r3, #0]
 154:../button.c   **** 			rI_ISPC |= BIT_EINT4567;		// borra el bit pendiente en INTPND
 2441              		.loc 1 154 0
 2442 047c 6C329FE5 		ldr	r3, .L40+16
 2443 0480 68229FE5 		ldr	r2, .L40+16
 2444 0484 002092E5 		ldr	r2, [r2, #0]
 2445 0488 022682E3 		orr	r2, r2, #2097152
 2446 048c 002083E5 		str	r2, [r3, #0]
 155:../button.c   **** 
 156:../button.c   **** 			rINTMSK ^= BIT_EINT4567;
 2447              		.loc 1 156 0
 2448 0490 5C329FE5 		ldr	r3, .L40+20
 2449 0494 58229FE5 		ldr	r2, .L40+20
 2450 0498 002092E5 		ldr	r2, [r2, #0]
 2451 049c 022622E2 		eor	r2, r2, #2097152
 2452 04a0 002083E5 		str	r2, [r3, #0]
 157:../button.c   **** //			mantener = -1;
 158:../button.c   **** 			return 1;
 2453              		.loc 1 158 0
 2454 04a4 0130A0E3 		mov	r3, #1
 2455 04a8 880000EA 		b	.L29
 2456              	.L28:
 159:../button.c   **** 		}
 160:../button.c   **** 
 161:../button.c   **** 		else {
 162:../button.c   **** 			// Si hemos soltado el boton
 163:../button.c   **** 			if((rPDATG & 0xC0) == 0xC0) {
 2457              		.loc 1 163 0
 2458 04ac 44329FE5 		ldr	r3, .L40+24
 2459 04b0 003093E5 		ldr	r3, [r3, #0]
 2460 04b4 C03003E2 		and	r3, r3, #192
 2461 04b8 C00053E3 		cmp	r3, #192
 2462 04bc 0E00001A 		bne	.L30
 164:../button.c   **** 				retardo = retardo_trd;
 2463              		.loc 1 164 0
 2464 04c0 34329FE5 		ldr	r3, .L40+28
 2465 04c4 002093E5 		ldr	r2, [r3, #0]
 2466 04c8 14329FE5 		ldr	r3, .L40+4
 2467 04cc 002083E5 		str	r2, [r3, #0]
 165:../button.c   **** 				tiempo_inicio = timer2_leer();
 2468              		.loc 1 165 0
 2469 04d0 FEFFFFEB 		bl	timer2_leer
 2470 04d4 0020A0E1 		mov	r2, r0
 2471 04d8 00329FE5 		ldr	r3, .L40
 2472 04dc 002083E5 		str	r2, [r3, #0]
 166:../button.c   **** 				waitState = 0;
 2473              		.loc 1 166 0
 2474 04e0 18329FE5 		ldr	r3, .L40+32
 2475 04e4 0020A0E3 		mov	r2, #0
 2476 04e8 002083E5 		str	r2, [r3, #0]
 167:../button.c   **** //				mantener = -1;
 168:../button.c   **** 				soltado = 1;
 2477              		.loc 1 168 0
 2478 04ec F4319FE5 		ldr	r3, .L40+8
 2479 04f0 0120A0E3 		mov	r2, #1
 2480 04f4 002083E5 		str	r2, [r3, #0]
 2481 04f8 730000EA 		b	.L27
 2482              	.L30:
 169:../button.c   **** 			} else {
 170:../button.c   **** 				if (waitState == 1)
 2483              		.loc 1 170 0
 2484 04fc FC319FE5 		ldr	r3, .L40+32
 2485 0500 003093E5 		ldr	r3, [r3, #0]
 2486 0504 010053E3 		cmp	r3, #1
 2487 0508 0A00001A 		bne	.L31
 171:../button.c   **** 				{
 172:../button.c   **** 					waitState = 2;
 2488              		.loc 1 172 0
 2489 050c EC319FE5 		ldr	r3, .L40+32
 2490 0510 0220A0E3 		mov	r2, #2
 2491 0514 002083E5 		str	r2, [r3, #0]
 173:../button.c   **** 					retardo = 50000;	// Add medio segundo de espera
 2492              		.loc 1 173 0
 2493 0518 C4319FE5 		ldr	r3, .L40+4
 2494 051c E0219FE5 		ldr	r2, .L40+36
 2495 0520 002083E5 		str	r2, [r3, #0]
 174:../button.c   **** 					tiempo_inicio = timer2_leer();
 2496              		.loc 1 174 0
 2497 0524 FEFFFFEB 		bl	timer2_leer
 2498 0528 0020A0E1 		mov	r2, r0
 2499 052c AC319FE5 		ldr	r3, .L40
 2500 0530 002083E5 		str	r2, [r3, #0]
 2501 0534 5C0000EA 		b	.L32
 2502              	.L31:
 175:../button.c   **** 				}
 176:../button.c   **** 				else if (waitState == 2)
 2503              		.loc 1 176 0
 2504 0538 C0319FE5 		ldr	r3, .L40+32
 2505 053c 003093E5 		ldr	r3, [r3, #0]
 2506 0540 020053E3 		cmp	r3, #2
 2507 0544 0A00001A 		bne	.L33
 177:../button.c   **** 				{
 178:../button.c   **** 					waitState = 3;
 2508              		.loc 1 178 0
 2509 0548 B0319FE5 		ldr	r3, .L40+32
 2510 054c 0320A0E3 		mov	r2, #3
 2511 0550 002083E5 		str	r2, [r3, #0]
 179:../button.c   **** 					retardo = 30000;
 2512              		.loc 1 179 0
 2513 0554 88319FE5 		ldr	r3, .L40+4
 2514 0558 A8219FE5 		ldr	r2, .L40+40
 2515 055c 002083E5 		str	r2, [r3, #0]
 180:../button.c   **** 					tiempo_inicio = timer2_leer();
 2516              		.loc 1 180 0
 2517 0560 FEFFFFEB 		bl	timer2_leer
 2518 0564 0020A0E1 		mov	r2, r0
 2519 0568 70319FE5 		ldr	r3, .L40
 2520 056c 002083E5 		str	r2, [r3, #0]
 2521 0570 4D0000EA 		b	.L32
 2522              	.L33:
 181:../button.c   **** 				}
 182:../button.c   **** 				else if (waitState == 3)
 2523              		.loc 1 182 0
 2524 0574 84319FE5 		ldr	r3, .L40+32
 2525 0578 003093E5 		ldr	r3, [r3, #0]
 2526 057c 030053E3 		cmp	r3, #3
 2527 0580 4900001A 		bne	.L32
 183:../button.c   **** 				{
 184:../button.c   **** 					// sumar 1 (mantenido)
 185:../button.c   **** 					if (state == 1)
 2528              		.loc 1 185 0
 2529 0584 80319FE5 		ldr	r3, .L40+44
 2530 0588 003093E5 		ldr	r3, [r3, #0]
 2531 058c 010053E3 		cmp	r3, #1
 2532 0590 1000001A 		bne	.L34
 186:../button.c   **** 					{
 187:../button.c   **** 						fila++;
 2533              		.loc 1 187 0
 2534 0594 74319FE5 		ldr	r3, .L40+48
 2535 0598 003093E5 		ldr	r3, [r3, #0]
 2536 059c 012083E2 		add	r2, r3, #1
 2537 05a0 68319FE5 		ldr	r3, .L40+48
 2538 05a4 002083E5 		str	r2, [r3, #0]
 188:../button.c   **** 						if (fila > 10)
 2539              		.loc 1 188 0
 2540 05a8 60319FE5 		ldr	r3, .L40+48
 2541 05ac 003093E5 		ldr	r3, [r3, #0]
 2542 05b0 0A0053E3 		cmp	r3, #10
 2543 05b4 020000DA 		ble	.L35
 189:../button.c   **** 						{
 190:../button.c   **** 							fila = 1;
 2544              		.loc 1 190 0
 2545 05b8 50319FE5 		ldr	r3, .L40+48
 2546 05bc 0120A0E3 		mov	r2, #1
 2547 05c0 002083E5 		str	r2, [r3, #0]
 2548              	.L35:
 191:../button.c   **** 						}
 192:../button.c   **** 						int_count = fila;
 2549              		.loc 1 192 0
 2550 05c4 44319FE5 		ldr	r3, .L40+48
 2551 05c8 002093E5 		ldr	r2, [r3, #0]
 2552 05cc 40319FE5 		ldr	r3, .L40+52
 2553 05d0 002083E5 		str	r2, [r3, #0]
 2554 05d4 280000EA 		b	.L36
 2555              	.L34:
 193:../button.c   **** 					}
 194:../button.c   **** 					else if (state == 2){
 2556              		.loc 1 194 0
 2557 05d8 2C319FE5 		ldr	r3, .L40+44
 2558 05dc 003093E5 		ldr	r3, [r3, #0]
 2559 05e0 020053E3 		cmp	r3, #2
 2560 05e4 1000001A 		bne	.L37
 195:../button.c   **** 						columna++;
 2561              		.loc 1 195 0
 2562 05e8 28319FE5 		ldr	r3, .L40+56
 2563 05ec 003093E5 		ldr	r3, [r3, #0]
 2564 05f0 012083E2 		add	r2, r3, #1
 2565 05f4 1C319FE5 		ldr	r3, .L40+56
 2566 05f8 002083E5 		str	r2, [r3, #0]
 196:../button.c   **** 						if (columna > 9) {
 2567              		.loc 1 196 0
 2568 05fc 14319FE5 		ldr	r3, .L40+56
 2569 0600 003093E5 		ldr	r3, [r3, #0]
 2570 0604 090053E3 		cmp	r3, #9
 2571 0608 020000DA 		ble	.L38
 197:../button.c   **** 							columna = 1;
 2572              		.loc 1 197 0
 2573 060c 04319FE5 		ldr	r3, .L40+56
 2574 0610 0120A0E3 		mov	r2, #1
 2575 0614 002083E5 		str	r2, [r3, #0]
 2576              	.L38:
 198:../button.c   **** 						}
 199:../button.c   **** 						int_count = columna;
 2577              		.loc 1 199 0
 2578 0618 F8309FE5 		ldr	r3, .L40+56
 2579 061c 002093E5 		ldr	r2, [r3, #0]
 2580 0620 EC309FE5 		ldr	r3, .L40+52
 2581 0624 002083E5 		str	r2, [r3, #0]
 2582 0628 130000EA 		b	.L36
 2583              	.L37:
 200:../button.c   **** 					} else if (state == 3) {
 2584              		.loc 1 200 0
 2585 062c D8309FE5 		ldr	r3, .L40+44
 2586 0630 003093E5 		ldr	r3, [r3, #0]
 2587 0634 030053E3 		cmp	r3, #3
 2588 0638 0F00001A 		bne	.L36
 201:../button.c   **** 						valor++;
 2589              		.loc 1 201 0
 2590 063c D8309FE5 		ldr	r3, .L40+60
 2591 0640 003093E5 		ldr	r3, [r3, #0]
 2592 0644 012083E2 		add	r2, r3, #1
 2593 0648 CC309FE5 		ldr	r3, .L40+60
 2594 064c 002083E5 		str	r2, [r3, #0]
 202:../button.c   **** 						if (valor > 9) {
 2595              		.loc 1 202 0
 2596 0650 C4309FE5 		ldr	r3, .L40+60
 2597 0654 003093E5 		ldr	r3, [r3, #0]
 2598 0658 090053E3 		cmp	r3, #9
 2599 065c 020000DA 		ble	.L39
 203:../button.c   **** 							valor = 0;
 2600              		.loc 1 203 0
 2601 0660 B4309FE5 		ldr	r3, .L40+60
 2602 0664 0020A0E3 		mov	r2, #0
 2603 0668 002083E5 		str	r2, [r3, #0]
 2604              	.L39:
 204:../button.c   **** 						}
 205:../button.c   **** 						int_count = valor;
 2605              		.loc 1 205 0
 2606 066c A8309FE5 		ldr	r3, .L40+60
 2607 0670 002093E5 		ldr	r2, [r3, #0]
 2608 0674 98309FE5 		ldr	r3, .L40+52
 2609 0678 002083E5 		str	r2, [r3, #0]
 2610              	.L36:
 206:../button.c   **** 					}
 207:../button.c   **** 					retardo = 30000;
 2611              		.loc 1 207 0
 2612 067c 60309FE5 		ldr	r3, .L40+4
 2613 0680 80209FE5 		ldr	r2, .L40+40
 2614 0684 002083E5 		str	r2, [r3, #0]
 208:../button.c   **** 					tiempo_inicio = timer2_leer();
 2615              		.loc 1 208 0
 2616 0688 FEFFFFEB 		bl	timer2_leer
 2617 068c 0020A0E1 		mov	r2, r0
 2618 0690 48309FE5 		ldr	r3, .L40
 2619 0694 002083E5 		str	r2, [r3, #0]
 209:../button.c   **** 					D8Led_symbol(int_count & 0x000f); // sacamos el valor por pantalla (módulo 16)
 2620              		.loc 1 209 0
 2621 0698 74309FE5 		ldr	r3, .L40+52
 2622 069c 003093E5 		ldr	r3, [r3, #0]
 2623 06a0 0F3003E2 		and	r3, r3, #15
 2624 06a4 0300A0E1 		mov	r0, r3
 2625 06a8 FEFFFFEB 		bl	D8Led_symbol
 2626              	.L32:
 210:../button.c   **** 				}
 211:../button.c   **** 
 212:../button.c   **** 
 213:../button.c   **** 
 214:../button.c   **** 				//Si no lo hemos soltado
 215:../button.c   **** //				if (mantener > 0 && ((mantener + 300000) > timer2_leer())) {
 216:../button.c   **** //					mantener = timer2_leer();
 217:../button.c   **** //					if (state == 1) {
 218:../button.c   **** //						fila++;
 219:../button.c   **** //						if (fila > 9) {
 220:../button.c   **** //							fila = 1;
 221:../button.c   **** //						}
 222:../button.c   **** //						int_count = fila;
 223:../button.c   **** //					} else if (state == 2) {
 224:../button.c   **** //						columna++;
 225:../button.c   **** //						if (columna > 9) {
 226:../button.c   **** //							columna = 1;
 227:../button.c   **** //						}
 228:../button.c   **** //						int_count = columna;
 229:../button.c   **** //					} else if (state == 3) {
 230:../button.c   **** //						valor++;
 231:../button.c   **** //						if (valor > 9) {
 232:../button.c   **** //							valor = 1;
 233:../button.c   **** //						}
 234:../button.c   **** //						int_count = valor;
 235:../button.c   **** //					}
 236:../button.c   **** //					D8Led_symbol(int_count);
 237:../button.c   **** //				}
 238:../button.c   **** 
 239:../button.c   **** 				retardo = retardo_trp;
 2627              		.loc 1 239 0
 2628 06ac 6C309FE5 		ldr	r3, .L40+64
 2629 06b0 002093E5 		ldr	r2, [r3, #0]
 2630 06b4 28309FE5 		ldr	r3, .L40+4
 2631 06b8 002083E5 		str	r2, [r3, #0]
 240:../button.c   **** 				tiempo_inicio = timer2_leer();
 2632              		.loc 1 240 0
 2633 06bc FEFFFFEB 		bl	timer2_leer
 2634 06c0 0020A0E1 		mov	r2, r0
 2635 06c4 14309FE5 		ldr	r3, .L40
 2636 06c8 002083E5 		str	r2, [r3, #0]
 2637              	.L27:
 241:../button.c   **** 			}
 242:../button.c   **** 		}
 243:../button.c   **** 	}
 244:../button.c   **** 
 245:../button.c   **** 	return 0;
 2638              		.loc 1 245 0
 2639 06cc 0030A0E3 		mov	r3, #0
 2640              	.L29:
 246:../button.c   **** }
 2641              		.loc 1 246 0
 2642 06d0 0300A0E1 		mov	r0, r3
 2643 06d4 0CD04BE2 		sub	sp, fp, #12
 2644 06d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2645 06dc 1EFF2FE1 		bx	lr
 2646              	.L41:
 2647              		.align	2
 2648              	.L40:
 2649 06e0 20000000 		.word	tiempo_inicio
 2650 06e4 10000000 		.word	retardo
 2651 06e8 14000000 		.word	soltado
 2652 06ec 5400D201 		.word	30539860
 2653 06f0 2400E001 		.word	31457316
 2654 06f4 0C00E001 		.word	31457292
 2655 06f8 4400D201 		.word	30539844
 2656 06fc 18000000 		.word	retardo_trd
 2657 0700 24000000 		.word	waitState
 2658 0704 50C30000 		.word	50000
 2659 0708 30750000 		.word	30000
 2660 070c 00000000 		.word	state
 2661 0710 00000000 		.word	fila
 2662 0714 0C000000 		.word	int_count
 2663 0718 00000000 		.word	columna
 2664 071c 00000000 		.word	valor
 2665 0720 1C000000 		.word	retardo_trp
 2666              		.cfi_endproc
 2667              	.LFE2:
 2669              		.align	2
 2670              		.global	iniciarEspera
 2672              	iniciarEspera:
 2673              	.LFB3:
 247:../button.c   **** 
 248:../button.c   **** void iniciarEspera(unsigned int trp, unsigned int trd)
 249:../button.c   **** {
 2674              		.loc 1 249 0
 2675              		.cfi_startproc
 2676              		@ Function supports interworking.
 2677              		@ args = 0, pretend = 0, frame = 8
 2678              		@ frame_needed = 1, uses_anonymous_args = 0
 2679 0724 0DC0A0E1 		mov	ip, sp
 2680              	.LCFI6:
 2681              		.cfi_def_cfa_register 12
 2682 0728 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2683 072c 04B04CE2 		sub	fp, ip, #4
 2684              		.cfi_offset 14, -8
 2685              		.cfi_offset 13, -12
 2686              		.cfi_offset 11, -16
 2687              	.LCFI7:
 2688              		.cfi_def_cfa 11, 4
 2689 0730 08D04DE2 		sub	sp, sp, #8
 2690 0734 10000BE5 		str	r0, [fp, #-16]
 2691 0738 14100BE5 		str	r1, [fp, #-20]
 250:../button.c   **** 	tiempo_inicio = timer2_leer();
 2692              		.loc 1 250 0
 2693 073c FEFFFFEB 		bl	timer2_leer
 2694 0740 0020A0E1 		mov	r2, r0
 2695 0744 4C309FE5 		ldr	r3, .L43
 2696 0748 002083E5 		str	r2, [r3, #0]
 251:../button.c   **** //	if( mantener == 0) {
 252:../button.c   **** //		mantener = tiempo_inicio;
 253:../button.c   **** //	}
 254:../button.c   **** 	retardo = trp;
 2697              		.loc 1 254 0
 2698 074c 10201BE5 		ldr	r2, [fp, #-16]
 2699 0750 44309FE5 		ldr	r3, .L43+4
 2700 0754 002083E5 		str	r2, [r3, #0]
 255:../button.c   **** 	soltado = 0;
 2701              		.loc 1 255 0
 2702 0758 40309FE5 		ldr	r3, .L43+8
 2703 075c 0020A0E3 		mov	r2, #0
 2704 0760 002083E5 		str	r2, [r3, #0]
 256:../button.c   **** 	waitState = 1;
 2705              		.loc 1 256 0
 2706 0764 38309FE5 		ldr	r3, .L43+12
 2707 0768 0120A0E3 		mov	r2, #1
 2708 076c 002083E5 		str	r2, [r3, #0]
 257:../button.c   **** 	retardo_trp = trp;
 2709              		.loc 1 257 0
 2710 0770 10201BE5 		ldr	r2, [fp, #-16]
 2711 0774 2C309FE5 		ldr	r3, .L43+16
 2712 0778 002083E5 		str	r2, [r3, #0]
 258:../button.c   **** 	retardo_trd = trd;
 2713              		.loc 1 258 0
 2714 077c 14201BE5 		ldr	r2, [fp, #-20]
 2715 0780 24309FE5 		ldr	r3, .L43+20
 2716 0784 002083E5 		str	r2, [r3, #0]
 259:../button.c   **** 	boton_pulsado();
 2717              		.loc 1 259 0
 2718 0788 FEFFFFEB 		bl	boton_pulsado
 260:../button.c   **** }
 2719              		.loc 1 260 0
 2720 078c 0CD04BE2 		sub	sp, fp, #12
 2721 0790 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2722 0794 1EFF2FE1 		bx	lr
 2723              	.L44:
 2724              		.align	2
 2725              	.L43:
 2726 0798 20000000 		.word	tiempo_inicio
 2727 079c 10000000 		.word	retardo
 2728 07a0 14000000 		.word	soltado
 2729 07a4 24000000 		.word	waitState
 2730 07a8 1C000000 		.word	retardo_trp
 2731 07ac 18000000 		.word	retardo_trd
 2732              		.cfi_endproc
 2733              	.LFE3:
 2735              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1955   .bss:00000000 state
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1952   .bss:00000000 $d
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1961   .bss:00000004 fila
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1967   .bss:00000008 columna
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1974   .data:00000000 valor
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1971   .data:00000000 $d
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1978   .bss:0000000c int_count
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1981   .bss:00000010 retardo
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1984   .bss:00000014 soltado
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1987   .bss:00000018 retardo_trd
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1990   .bss:0000001c retardo_trp
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1993   .bss:00000020 tiempo_inicio
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1996   .bss:00000024 waitState
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:1999   .text:00000000 $a
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2002   .text:00000000 Eint4567_init
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2075   .text:000000b0 $d
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2093   .text:000000e0 Eint4567_ISR
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2090   .text:000000e0 $a
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2672   .text:00000724 iniciarEspera
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2379   .text:000003ec $d
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2391   .text:00000410 $a
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2394   .text:00000410 esperaFinalizada
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2649   .text:000006e0 $d
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2669   .text:00000724 $a
C:\Users\TEMP\AppData\Local\Temp\ccXjJGy7.s:2726   .text:00000798 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
push_debug
leds_off
D8Led_symbol
timer2_leer
boton_pulsado
